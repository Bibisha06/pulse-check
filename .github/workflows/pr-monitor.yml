name: PR Performance Monitoring
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  monitor-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Start monitoring environment
        run: |
          # No API keys needed - everything runs locally!
          export BRANCH="${{ github.head_ref }}"
          docker compose up -d
          
          # Wait for services to be ready
          echo "Waiting for services to start..."
          sleep 60
          
          # Check if services are running
          docker compose ps
      
      - name: Run tests
        run: |
          # Wait for application to be ready with retries
          echo "Testing application health..."
          for i in {1..10}; do
            if curl -f http://localhost:8000/health; then
              echo "Application is healthy!"
              break
            fi
            echo "Waiting for application... attempt $i/10"
            sleep 10
          done
          
          # Run additional tests
          curl -f http://localhost:8000/hello || echo "Hello endpoint test failed"
          echo "Performance testing completed"
      
      - name: Post results to PR
        uses: actions/github-script@v7
        with:
          script: |
            # Only needs GitHub token (automatically provided)
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              body: "Performance test completed!"
            });
      
      - name: Debug and cleanup
        if: always()
        run: |
          echo "=== Service Status ==="
          docker compose ps
          
          echo "=== Application Logs ==="
          docker compose logs app || echo "No app logs available"
          
          echo "=== Cleanup ==="
          docker compose down -v